name: "Publish"

on:
  push:
    branches:
    - 'master'

env:
  PROJECT_NAME: 'GitActionPractice'
  PROJECT_PATH: 'GitActionPractice/GitActionPractice.csproj'
  PACKAGE_OUTPUT_DIRECTORY: ${{ github.workspace }}\output
  NUGET_SOURCE_URL: 'https://api.nuget.org/v3/index.json'
  GITHUB_SOURCE_URL: 'https://nuget.pkg.github.com/kiryuumaru/index.json'
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  version_checker:
    name: 'Version Checker'
    runs-on: 'ubuntu-latest'
    outputs:
      new_tag: ${{ steps.bump.outputs.new_tag }}

    steps:

    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'

    - name: Bump version and push tag
      id: bump
      uses: anothrNick/github-tag-action@1.36.0
      env:
        WITH_V: true
        DEFAULT_BUMP: none

    - name: Print
      run: echo ${{ needs.version_checker.outputs.new_tag }}

  publish:
    if: ${{ needs.version_checker.outputs.new_tag != '' }}
    name: 'Publish'
    runs-on: 'ubuntu-latest'
    steps:

    - name: 'Checkout'
      uses: actions/checkout@v2

    - name: 'Install dotnet'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: 'Restore packages'
      run: dotnet restore ${{ env.PROJECT_PATH }}

    - name: 'Build project'
      run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release

    - name: 'Get Version'
      id: version
      uses: battila7/get-version-action@v2
      
    - name: Build Changelog
      id: changelog
      uses: mikepenz/release-changelog-builder-action@v3

    - name: 'Pack project'
      run: dotnet pack ${{ env.PROJECT_PATH }} --no-restore --no-build --configuration Release --include-symbols -p:SymbolPackageFormat=snupkg -p:PackageVersion=${{ steps.version.outputs.version-without-v }} --output ${{ env.PACKAGE_OUTPUT_DIRECTORY }}
      
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        body: ${{ steps.github_release.outputs.changelog }}
        draft: false
        prerelease: ${{ steps.version.outputs.prerelease != '' }}
        files: ${{ env.PACKAGE_OUTPUT_DIRECTORY }}\*

    - name: 'Push package to Github'
      run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}\*.nupkg -k ${{ secrets.GITHUB_TOKEN }} -s ${{ env.GITHUB_SOURCE_URL }}

    - name: 'Push package to NuGet'
      run: dotnet nuget push ${{ env.PACKAGE_OUTPUT_DIRECTORY }}\*.nupkg -k ${{ secrets.NUGET_AUTH_TOKEN }} -s ${{ env.NUGET_SOURCE_URL }}